# Use a builder argument to select the platform
ARG TARGETPLATFORM

# Stage 1: Select the correct pre-built binary based on the target platform
FROM scratch as builder
ARG TARGETPLATFORM
COPY binary-amd64 /ai-proxy-amd64
COPY binary-arm64 /ai-proxy-arm64

# Stage 2: Final image
FROM alpine:latest

# Copy the correct binary from the builder stage
COPY --from=builder /ai-proxy-$(echo ${TARGETPLATFORM} | cut -d'/' -f2) /usr/local/bin/ai-proxy

# Install root certificates for making HTTPS requests
RUN apk --no-cache add ca-certificates

# Expose the default port. The actual port is controlled by the .env file.
EXPOSE 3000

# Set the user and group to a non-root user for security
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser

# Set environment variables for the application
# These should be provided at runtime, but we can set defaults
ENV APP_BASE_URL="http://0.0.0.0:3000"

# Forward proxy environment variables
# ARG HTTP_PROXY
# ARG HTTPS_PROXY
# ENV HTTP_PROXY=${HTTP_PROXY}
# ENV HTTPS_PROXY=${HTTPS_PROXY}

# The following need to be provided via --env-file or other means at runtime
# ENV GOOGLE_CLIENT_ID=""
# ENV GOOGLE_CLIENT_SECRET=""
# ENV OAUTH_CLIENT_ID=""
# ENV OAUTH_CLIENT_SECRET=""

# Command to run the application
CMD ["ai-proxy"]
